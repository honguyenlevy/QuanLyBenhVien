CREATE TABLE KUHSBA
(
K RAW(2000)
)


CREATE OR REPLACE PROCEDURE TaoKhoaHSBA
AS
    keyRaw raw(32);
BEGIN
    keyRaw := DBMS_CRYPTO.RANDOMBYTES (32);
    INSERT INTO KUHSBA(K) VALUES(UTL_RAW.BIT_XOR(keyRaw, UTL_I18N.STRING_TO_RAW('372460635')));
    
END;

EXEC TAOKHOAHSBA;
SELECT * FROM KUHSBA;




--T?O HÀM MÃ HÓA
CREATE OR REPLACE FUNCTION ENCRYPT(plainText in varchar2, keyRaw in raw )
RETURN raw
IS
      encryption_type    PLS_INTEGER :=  DBMS_CRYPTO.ENCRYPT_AES256 + DBMS_CRYPTO.CHAIN_CBC + DBMS_CRYPTO.PAD_PKCS5;
      iv_raw             RAW (16);
      cipherText raw(2000);
BEGIN
   iv_raw        := DBMS_CRYPTO.RANDOMBYTES (16);
   cipherText := DBMS_CRYPTO.ENCRYPT
      (
         src => UTL_I18N.STRING_TO_RAW (plainText,  'AL32UTF8'),
         typ => encryption_type,
         key => keyRaw,
         iv  => iv_raw
      );
    cipherText := UTL_RAW.CONCAT(iv_raw, cipherText);
    RETURN cipherText;
END ENCRYPT;
/
show errors
/

--HÀM GI?I MÃ
CREATE OR REPLACE FUNCTION DECRYPT(cipherText in raw, keyRaw in raw)
RETURN varchar2
IS
     encryption_type    PLS_INTEGER :=  DBMS_CRYPTO.ENCRYPT_AES256 + DBMS_CRYPTO.CHAIN_CBC + DBMS_CRYPTO.PAD_PKCS5;
    plainText varchar2(200);
     decrypted_raw raw(2000);
     iv_raw             RAW (16);
     cipher             RAW(2000);
BEGIN
    IF (cipherText is not null) THEN
       iv_raw := UTL_RAW.SUBSTR(cipherText, 0,  16);
       cipher:= UTL_RAW.SUBSTR(cipherText, 17,  UTL_RAW.LENGTH( cipherText) - 16);
       decrypted_raw := DBMS_CRYPTO.DECRYPT
      (
         src => cipher,
         typ => encryption_type,
         key => keyRaw,
         iv  => iv_raw
      );
      plainText  := UTL_I18N.RAW_TO_CHAR (decrypted_raw, 'AL32UTF8');
    ELSE
      plainText   := null;
    END IF;
  
  RETURN  plainText;
END;


ALTER TABLE HSBA
ADD KETLUAN_ENCRYPT RAW(2000);


CREATE OR REPLACE PROCEDURE MaHoaHSBA
AS
    keyModified raw(2000);
    CURSOR CUR IS SELECT MAHSBA FROM HSBA;
    V_MAHSBA VARCHAR(10);
    V_KETLUAN VARCHAR2(100);
BEGIN
   select  K into keyModified from KUHSBA ;
OPEN CUR;
   LOOP 
     FETCH CUR INTO V_MAHSBA;
     EXIT WHEN CUR%NOTFOUND;     
      SELECT KETLUAN INTO V_KETLUAN FROM HSBA WHERE UPPER(MAHSBA)=UPPER(V_MAHSBA);
      UPDATE HSBA SET KETLUAN_ENCRYPT = ENCRYPT(V_KETLUAN, UTL_RAW.BIT_XOR(keyModified, UTL_I18N.STRING_TO_RAW(UPPER(V_MAHSBA)))) WHERE UPPER(MAHSBA)=UPPER(V_MAHSBA);    
     END LOOP;
CLOSE CUR;
END;
SELECT K FROM KUHSBA;

EXEC MAHOAHSBA;

INSERT INTO HSBA(MAHSBA,KETLUAN) VALUES ( 'HSBA1','BO TAY');

SELECT * FROM HSBA;

create or replace type record_HSBA as object (
      MAHSBA VARCHAR(9),
      MABN VARCHAR(7),
      NGAY DATE,
      CHUANDOAN VARCHAR(50),
      MABS VARCHAR(7),
      MAKHOA NVARCHAR2(30),
      MACSYT VARCHAR(7),
      KETLUAN VARCHAR(50)
);

create or replace type table_HSBA as table of record_HSBA;

CREATE OR REPLACE FUNCTION xemHSBA
RETURN Table_HSBA
IS
  res Table_HSBA := Table_HSBA();
  userName VARCHAR(7);
  keyModified raw(2000);
  I_VAITRO VARCHAR(20);
BEGIN
      SELECT SYS_CONTEXT('userenv', 'SESSION_USER') INTO userName FROM DUAL;
      select  K into keyModified from KUHSBA ;
      SELECT VAITRO INTO I_VAITRO FROM NHANVIEN WHERE UPPER(MANV)=UPPER(userName);
      
      IF(I_VAITRO='Y/BACSI') THEN
        SELECT record_hsba(MAHSBA,MABN,NGAY,CHUANDOAN,MABS,MAKHOA,MACSYT, QTV.DECRYPT(KETLUAN_encrypt, UTL_RAW.BIT_XOR(KeyModified, UTL_I18N.STRING_TO_RAW('372460635')) ) ) BULK COLLECT INTO res FROM QTV.HSBA where TRIM(UPPER(MABS)) = UPPER(userName);
       END IF;
       
      IF (TRIM(UPPER(I_VAITRO)) =TRIM(UPPER('NGHIEN CUU'))) THEN
            SELECT record_hsba(MAHSBA,MABN,NGAY,CHUANDOAN,MABS,MAKHOA,MACSYT, QTV.DECRYPT(KETLUAN_encrypt, UTL_RAW.BIT_XOR(KeyModified, UTL_I18N.STRING_TO_RAW('372460635')) ) ) BULK COLLECT INTO res 
            FROM QTV.HSBA where TRIM(UPPER(MAKHOA)) IN( SELECT TRIM(UPPER(CHUYENKHOA)) FROM NHANVIEN WHERE TRIM(UPPER(MANV))= TRIM(UPPER(userName)));
       END IF;     
    return res;
END;


 select * FROM QTV.HSBA where TRIM(UPPER(MAKHOA)) IN( SELECT TRIM(UPPER(CHUYENKHOA)) FROM NHANVIEN WHERE TRIM(UPPER(MANV))= TRIM(UPPER('NV1')));

select * from hsba ;
COMMIT;
SELECT * FROM NHANVIEN;
update NHANVIEN SET VAITRO='Y/BACSI';
UPDATE NHANVIEN SET VAITRO ='NGHIEN CUU' WHERE MANV='NV1'
UPDATE NHANVIEN SET CHUYENKHOA ='NGOAI' WHERE MANV='NV1'
GRANT EXECUTE ON xemHSBA to public;

alter session set "_ORACLE_SCRIPT"=true;

CREATE USER NV1 IDENTIFIED BY 1;
GRANT CREATE SESSION TO NV1;

SELECT * FROM TABLE(QTV.XEMHSBA);



CREATE OR REPLACE PROCEDURE THEMHSBA(I_MAHSBA VARCHAR,I_MABN VARCHAR,I_NGAY DATE,I_CHUANDOAN VARCHAR,I_MABS VARCHAR,I_MAKHOA NVARCHAR2,I_MACSYT VARCHAR,I_KETLUAN VARCHAR)
AS
COUNTT integer :=0;
keyModified raw(2000);
BEGIN
SELECT COUNT(*) INTO COUNTT FROM HSBA WHERE UPPER(MAHSBA)=UPPER(I_MAHSBA);
IF COUNTT<1 THEN
INSERT INTO HSBA(MAHSBA,MABN,NGAY,CHUANDOAN,MABS,MAKHOA,MACSYT) VALUES  (I_MAHSBA,I_MABN,I_NGAY,I_CHUANDOAN,I_MABS,I_MAKHOA,I_MACSYT) ;
select  K into keyModified from KUHSBA ;
UPDATE HSBA SET KETLUAN_ENCRYPT = ENCRYPT(I_KETLUAN, UTL_RAW.BIT_XOR(keyModified, UTL_I18N.STRING_TO_RAW('372460635'))) WHERE UPPER(MAHSBA)=UPPER(I_MAHSBA);     
ELSIF (COUNTT>0) THEN
UPDATE HSBA SET MABN= I_MABN,NGAY=I_NGAY,CHUANDOAN=I_CHUANDOAN,MABS=I_MABS, MAKHOA=I_MAKHOA,MACSYT=I_MACSYT WHERE UPPER(MAHSBA)=UPPER(I_MAHSBA);
select  K into keyModified from KUHSBA ;
UPDATE HSBA SET KETLUAN_ENCRYPT = ENCRYPT(I_KETLUAN, UTL_RAW.BIT_XOR(keyModified, UTL_I18N.STRING_TO_RAW('372460635'))) WHERE UPPER(MAHSBA)=UPPER(I_MAHSBA);
END IF;
END;

EXEC THEMHSBA('HSBA2','BN1',NULL,'UNG THU','NV1','NOI','CS1','BOTAY');



